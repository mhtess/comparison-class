// can run in webppl.org
var binParam = 5;

var classPrior = Infer({model: function(){return uniformDraw(["sub", "super"])}});

var alphas = {s1: 3, s2: 1};

var literalListener = cache(function(utterance, threshold, comparisonClass) {
  Infer({model: function(){
    var state = sample(statePrior[comparisonClass]);
    var m = meaning(utterance, state, threshold);
    condition(m);
    return state;
  }})
})

var form = "positive";

var speaker1 = cache(function(state, threshold, comparisonClass) {
  Infer({model: function(){
    var utterance = sample(utterancePrior[form])
    var L0 = literalListener(utterance, threshold, comparisonClass)
    factor( alphas.s1 * L0.score(state) )
    return utterance
  }})
})

var pragmaticListener = function(utterance) {
  Infer({model: function(){
    var comparisonClass = sample(classPrior);
    var state = sample(statePrior["sub"]);
    var threshold = sample(thresholdPrior[form]);
    var S1 = speaker1(state, threshold, comparisonClass);
    observe(S1, utterance);
    return comparisonClass
  }})
}

pragmaticListener('positiveAdjective')
